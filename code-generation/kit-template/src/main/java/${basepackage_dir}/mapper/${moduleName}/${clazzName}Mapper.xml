<#include "/macro.include"/>
<#assign clazzNameLower = clazzName?uncap_first>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<#macro mapperEl value>${r"#{"}${value}}</#macro>
<#macro mapperElType column>${r"#{"}${column.columnNameFirstLower}, jdbcType=${column.jdbcSqlTypeName}}</#macro>
<mapper namespace="${basepackage}.mapper.${moduleName}.${clazzNameLower}Mapper">

	<resultMap id="${clazzName}Entity" type="${basepackage}.domain.${moduleName}.${clazzName}Entity">
        <#list table.columns as column>
        <result property="${column.columnNameLower}" column="${column.sqlName}"/>
		</#list>
	</resultMap>

	<resultMap id="${clazzName}" type="${basepackage}.domain.${moduleName}.${clazzName}">
        <#list table.columns as column>
        <result property="${column.columnNameLower}" column="${column.sqlName}"/>
		</#list>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		<#list table.columns as column>${column.sqlName}<#if column_has_next>,</#if></#list>
	    ]]>
	</sql>

	<insert id="create">
    <![CDATA[
        INSERT INTO ${table.sqlName} (
        <#list table.columns as column>
        	${column.sqlName} <#if column_has_next>,</#if>
        </#list>
        ) VALUES (
        <#list table.columns as column>
        	<@mapperElType column/> <#if column_has_next>,</#if>
        </#list>
        )
    ]]>
	</insert>

	<update id="update" >
    <![CDATA[
        UPDATE ${table.sqlName}
           SET
	        <#list table.notPkColumns as column>
	           ${column.sqlName} = <@mapperElType column/> <#if column_has_next>,</#if>
	        </#list>
         WHERE
        	<#list table.compositeIdColumns as column>
	           ${column.sqlName} = <@mapperElType column/> <#if column_has_next>,</#if>
	        </#list>
    ]]>
	</update>

    <delete id="deleteById">
    <![CDATA[
        DELETE FROM ${table.sqlName} WHERE
        <#list table.compositeIdColumns as column>
        ${column.sqlName} = <@mapperElType column/> <#if column_has_next>,</#if>
		</#list>
    ]]>
    </delete>

    <select id="getById" resultMap="${clazzName}Entity">
		SELECT <include refid="columns" />
	    <![CDATA[
		  FROM ${table.sqlName}
	     WHERE 
		    <#list table.compositeIdColumns as column>
		       ${column.sqlName} = <@mapperElType column/> <#if column_has_next>,</#if>
		    </#list>
	    ]]>
	</select>

		<#list table.columns as column>
		<#if column.unique && !column.pk>

		<select id="getBy${column.columnName}" resultMap="${clazzName}" parameterType="${column.javaType}">
		SELECT <include refid="columns"/>
		<![CDATA[
				  FROM ${table.sqlName}
				 WHERE ${column.sqlName} = <@mapperElType column/>
				]]>
		</select>
		</#if>
		</#list>

	<sql id="findWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	        <#list table.columns as column>
	        <#if column.isDateTimeColumn>
	        <if test="@Ognl@isNotEmpty(${column.columnNameFirstLower}Begin)">
				AND ${column.sqlName} >= <@mapperEl column.columnNameFirstLower+"Begin"/>
		    </if>
		    <if test="@Ognl@isNotEmpty(${column.columnNameFirstLower}End)">
				AND ${column.sqlName} &lt;= <@mapperEl column.columnNameFirstLower+"End"/>
		    </if>
	        <#else>
	        <if test="@Ognl@isNotEmpty(${column.columnNameFirstLower})">
				AND ${column.sqlName} = <@mapperElType column/>
			</if>
	        </#if>
	        </#list>
		</where>
	</sql>

    <select id="findListCount" resultType="long">
        SELECT COUNT(*) FROM ${table.sqlName}
		<include refid="findWhere"/>
    </select>

    <select id="findList" resultMap="${clazzName}">
    	SELECT <include refid="columns" />
	    FROM ${table.sqlName}
		<include refid="findWhere"/>

		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY <@jspEl 'sortColumns'/>
		</if>
    </select>


</mapper>

