<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.ctw.dao.role.IRoleDao">

    <resultMap id="RoleEntity" type="com.ctw.domain.role.RoleEntity">
        <result property="id" column="id"/>
        <result property="roleName" column="role_name"/>
        <result property="description" column="description"/>
        <result property="isValid" column="is_valid"/>
        <result property="createDate" column="create_date"/>
        <result property="createNameId" column="create_name_id"/>
    </resultMap>

    <resultMap id="Role" type="com.ctw.domain.role.Role">
        <result property="id" column="id"/>
        <result property="roleName" column="role_name"/>
        <result property="description" column="description"/>
        <result property="isValid" column="is_valid"/>
        <result property="createDate" column="create_date"/>
        <result property="createNameId" column="create_name_id"/>
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
	    <![CDATA[

		id,role_name,description,is_valid,create_date,create_name_id

        ]]>
	</sql>

    <insert id="create">
    <![CDATA[

        INSERT INTO t_sys_role (
        	id ,
        	role_name ,
        	description ,
        	is_valid ,
        	create_date ,
        	create_name_id 
        ) VALUES (
        	#{id, jdbcType=INTEGER} ,
        	#{roleName, jdbcType=VARCHAR} ,
        	#{description, jdbcType=VARCHAR} ,
        	#{isValid, jdbcType=INTEGER} ,
        	#{createDate, jdbcType=TIMESTAMP} ,
        	#{createNameId, jdbcType=INTEGER} 
        )

        ]]>
	</insert>

    <update id="update">
    <![CDATA[

        UPDATE t_sys_role
           SET
	           role_name = #{roleName, jdbcType=VARCHAR} ,
	           description = #{description, jdbcType=VARCHAR} ,
	           is_valid = #{isValid, jdbcType=INTEGER} ,
	           create_date = #{createDate, jdbcType=TIMESTAMP} ,
	           create_name_id = #{createNameId, jdbcType=INTEGER} 
         WHERE
	           id = #{id, jdbcType=INTEGER} 

        ]]>
	</update>

    <delete id="deleteById">
    <![CDATA[

        DELETE FROM t_sys_role WHERE
        id = #{id, jdbcType=INTEGER} 

        ]]>
    </delete>

    <select id="getById" resultMap="RoleEntity">
        SELECT
        <include refid="columns"/>
        <![CDATA[
		  FROM t_sys_role
	     WHERE 
		       id = #{id, jdbcType=INTEGER} 
	    ]]>
    </select>


    <sql id="findWhere">
        <!-- ognl访问静态方法的表达式 为@class@method(args)

        ,以下为调用Ognl.isNotEmpty()方法,
        还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
        <where>
            <if test="@Ognl@isNotEmpty(id)">
                AND id = #{id, jdbcType=INTEGER}
            </if>
            <if test="@Ognl@isNotEmpty(roleName)">
                AND  role_name  like CONCAT('%', #{roleName},'%' )
            </if>
            <if test="@Ognl@isNotEmpty(description)">
                AND description = #{description, jdbcType=VARCHAR}
            </if>

            <if test="@Ognl@isNotEmpty(isValid)">
                AND is_valid = #{isValid, jdbcType=INTEGER}
            </if>
            <if test="@Ognl@isNotEmpty(createDateBegin)">
                AND create_date >= #{createDateBegin}
            </if>
            <if test="@Ognl@isNotEmpty(createDate)">
                AND create_date = #{createDate}
            </if>
            <if test="@Ognl@isNotEmpty(createDateEnd)">
                AND create_date &lt;= #{createDateEnd}
            </if>
            <if test="@Ognl@isNotEmpty(createNameId)">
                AND create_name_id = #{createNameId, jdbcType=INTEGER}
            </if>

            <if test="@Ognl@isNotEmpty(roleIds)">
                AND id
              <if test="@Ognl@isNotEmpty(findType)">
                   NOT
                </if>
                in
                <foreach item="item" index="index" collection="roleIds"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>

            </if>
        </where>
    </sql>

    <select id="findListCount" resultType="long">
        SELECT COUNT(*) FROM t_sys_role
        <include refid="findWhere"/>
    </select>

    <select id="findList" resultMap="Role">
        SELECT
        <include refid="columns"/>
        FROM t_sys_role
        <include refid="findWhere"/>

        <if test="@Ognl@isNotEmpty(sortColumns)">
            ORDER BY ${sortColumns}
        </if>
    </select>


</mapper>

